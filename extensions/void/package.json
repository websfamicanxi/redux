{
  "name": "void",
  "displayName": "Void",
  "description": "",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.89.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [],
  "main": "./out/extension.js",
  "contributes": {
    "configuration": {
      "title": "API Keys",
      "properties": {
        "void.provider": {
          "type": "string",
          "default": "anthropic",
          "description": "Choose a provider (openai | anthropic | azure | greptile | ollama)",
          "enum": [
            "openai",
            "anthropic",
            "azure",
            "greptile",
            "ollama"
          ]
        },
        "void.anthropic": {
          "type": "object",
          "properties": {
            "model": {
              "type": "string",
              "default": "claude-3-5-sonnet-20240620",
              "description": "Choose a model ('claude-3-5-sonnet-20240620' | 'claude-3-opus-20240229' | 'claude-3-sonnet-20240229' | 'claude-3-haiku-20240307')",
              "enum": [
                "claude-3-5-sonnet-20240620",
                "claude-3-opus-20240229",
                "claude-3-sonnet-20240229",
                "claude-3-haiku-20240307"
              ]
            },
            "providerSettings": {
              "type": "object",
              "properties": {
                "baseURL": {
                  "type": "string",
                  "description": "Use a different URL prefix for API calls, e.g. to use proxy servers."
                },
                "apiKey": {
                  "type": "string",
                  "description": "Anthropic API key."
                },
                "headers": {
                  "type": "object",
                  "description": "Custom headers to include in the requests."
                }
              }
            }
          }
        },
        "void.openai": {
          "type": "object",
          "properties": {
            "model": {
              "type": "string",
              "default": "gpt-4o",
              "description": "Choose a model ('o1-preview' | 'o1-mini' | 'gpt-4o' | 'gpt-4o-2024-05-13' | 'gpt-4o-2024-08-06' | 'gpt-4o-mini' | 'gpt-4o-mini-2024-07-18' | 'gpt-4-turbo' | 'gpt-4-turbo-2024-04-09' | 'gpt-4-turbo-preview' | 'gpt-4-0125-preview' | 'gpt-4-1106-preview' | 'gpt-4' | 'gpt-4-0613' | 'gpt-3.5-turbo-0125' | 'gpt-3.5-turbo' | 'gpt-3.5-turbo-1106')",
              "enum": [
                "o1-preview",
                "o1-mini",
                "gpt-4o",
                "gpt-4o-2024-05-13",
                "gpt-4o-2024-08-06",
                "gpt-4o-mini",
                "gpt-4o-mini-2024-07-18",
                "gpt-4-turbo",
                "gpt-4-turbo-2024-04-09",
                "gpt-4-turbo-preview",
                "gpt-4-0125-preview",
                "gpt-4-1106-preview",
                "gpt-4",
                "gpt-4-0613",
                "gpt-3.5-turbo-0125",
                "gpt-3.5-turbo",
                "gpt-3.5-turbo-1106"
              ]
            },
            "providerSettings": {
              "type": "object",
              "properties": {
                "baseURL": {
                  "type": "string",
                  "description": "Use a different URL prefix for API calls, e.g. to use proxy servers."
                },
                "apiKey": {
                  "type": "string",
                  "description": "OpenAI API key."
                },
                "headers": {
                  "type": "object",
                  "description": "Custom headers to include in the requests."
                },
                "organization": {
                  "type": "string",
                  "description": "OpenAI Organization."
                },
                "project": {
                  "type": "string",
                  "description": "OpenAI project."
                },
                "compatibility": {
                  "type": "string",
                  "description": "OpenAI compatibility mode. Should be set to `strict` when using the OpenAI API, and `compatible` when using 3rd party providers. In `compatible` mode, newer information such as streamOptions are not being sent. Defaults to 'compatible'.",
                  "enum": [
                    "strict",
                    "compatible"
                  ]
                }
              }
            }
          }
        },
        "void.azure": {
          "type": "object",
          "properties": {
            "deploymentId": {
              "type": "string",
              "description": "Azure API deployment ID."
            },
            "providerSettings": {
              "type": "object",
              "properties": {
                "apiKey": {
                  "type": "string",
                  "description": "Azure API key."
                },
                "baseURL": {
                  "type": "string",
                  "description": "Azure API base URL."
                },
                "resourceName": {
                  "type": "string",
                  "description": "Name of the Azure OpenAI resource. Either this or `baseURL` can be used. \nThe resource name is used in the assembled URL: `https://{resourceName}.openai.azure.com/openai/deployments/{modelId}{path}`"
                },
                "headers": {
                  "type": "object",
                  "description": "Custom headers to include in the requests."
                }
              }
            }
          }
        },
        "void.ollama": {
          "type": "object",
          "properties": {
            "model": {
              "type": "string",
              "description": "Ollama model. 'codegemma' | 'codegemma:2b' | 'codegemma:7b' | 'codellama' | 'codellama:7b' | 'codellama:13b' | 'codellama:34b' | 'codellama:70b' | 'codellama:code' | 'codellama:python' | 'command-r' | 'command-r:35b' | 'command-r-plus' | 'command-r-plus:104b' | 'deepseek-coder-v2' | 'deepseek-coder-v2:16b' | 'deepseek-coder-v2:236b' | 'falcon2' | 'falcon2:11b' | 'firefunction-v2' | 'firefunction-v2:70b' | 'gemma' | 'gemma:2b' | 'gemma:7b' | 'gemma2' | 'gemma2:2b' | 'gemma2:9b' | 'gemma2:27b' | 'llama2' | 'llama2:7b' | 'llama2:13b' | 'llama2:70b' | 'llama3' | 'llama3:8b' | 'llama3:70b' | 'llama3-chatqa' | 'llama3-chatqa:8b' | 'llama3-chatqa:70b' | 'llama3-gradient' | 'llama3-gradient:8b' | 'llama3-gradient:70b' | 'llama3.1' | 'llama3.1:8b' | 'llama3.1:70b' | 'llama3.1:405b' | 'llava' | 'llava:7b' | 'llava:13b' | 'llava:34b' | 'llava-llama3' | 'llava-llama3:8b' | 'llava-phi3' | 'llava-phi3:3.8b' | 'mistral' | 'mistral:7b' | 'mistral-large' | 'mistral-large:123b' | 'mistral-nemo' | 'mistral-nemo:12b' | 'mixtral' | 'mixtral:8x7b' | 'mixtral:8x22b' | 'moondream' | 'moondream:1.8b' | 'openhermes' | 'openhermes:v2.5' | 'phi3' | 'phi3:3.8b' | 'phi3:14b' | 'phi3.5' | 'phi3.5:3.8b' | 'qwen' | 'qwen:7b' | 'qwen:14b' | 'qwen:32b' | 'qwen:72b' | 'qwen:110b' | 'qwen2' | 'qwen2:0.5b' | 'qwen2:1.5b' | 'qwen2:7b' | 'qwen2:72b' | 'smollm' | 'smollm:135m' | 'smollm:360m' | 'smollm:1.7b'",
              "default": "llama3.1",
              "enum": [
                "codegemma",
                "codegemma:2b",
                "codegemma:7b",
                "codellama",
                "codellama:7b",
                "codellama:13b",
                "codellama:34b",
                "codellama:70b",
                "codellama:code",
                "codellama:python",
                "command-r",
                "command-r:35b",
                "command-r-plus",
                "command-r-plus:104b",
                "deepseek-coder-v2",
                "deepseek-coder-v2:16b",
                "deepseek-coder-v2:236b",
                "falcon2",
                "falcon2:11b",
                "firefunction-v2",
                "firefunction-v2:70b",
                "gemma",
                "gemma:2b",
                "gemma:7b",
                "gemma2",
                "gemma2:2b",
                "gemma2:9b",
                "gemma2:27b",
                "llama2",
                "llama2:7b",
                "llama2:13b",
                "llama2:70b",
                "llama3",
                "llama3:8b",
                "llama3:70b",
                "llama3-chatqa",
                "llama3-chatqa:8b",
                "llama3-chatqa:70b",
                "llama3-gradient",
                "llama3-gradient:8b",
                "llama3-gradient:70b",
                "llama3.1",
                "llama3.1:8b",
                "llama3.1:70b",
                "llama3.1:405b",
                "llava",
                "llava:7b",
                "llava:13b",
                "llava:34b",
                "llava-llama3",
                "llava-llama3:8b",
                "llava-phi3",
                "llava-phi3:3.8b",
                "mistral",
                "mistral:7b",
                "mistral-large",
                "mistral-large:123b",
                "mistral-nemo",
                "mistral-nemo:12b",
                "mixtral",
                "mixtral:8x7b",
                "mixtral:8x22b",
                "moondream",
                "moondream:1.8b",
                "openhermes",
                "openhermes:v2.5",
                "phi3",
                "phi3:3.8b",
                "phi3:14b",
                "phi3.5",
                "phi3.5:3.8b",
                "qwen",
                "qwen:7b",
                "qwen:14b",
                "qwen:32b",
                "qwen:72b",
                "qwen:110b",
                "qwen2",
                "qwen2:0.5b",
                "qwen2:1.5b",
                "qwen2:7b",
                "qwen2:72b",
                "smollm",
                "smollm:135m",
                "smollm:360m",
                "smollm:1.7b"
              ]
            },
            "providerSettings": {
              "type": "object",
              "properties": {
                "baseURL": {
                  "type": "string",
                  "description": "Ollama base URL. Local API server can be started with `OLLAMA_ORIGINS=* ollama serve`"
                },
                "headers": {
                  "type": "object",
                  "description": "Custom headers to include in the requests."
                }
              }
            }
          }
        },
        "void.greptile": {
          "type": "object",
          "properties": {
            "providerSettings": {
              "type": "object",
              "properties": {
                "apikey": {
                  "type": "string",
                  "description": "Greptile API key."
                },
                "headers": {
                  "type": "object",
                  "description": "Custom headers to include in the requests.",
                  "properties": {
                    "X-Github-Token": {
                      "type": "string",
                      "description": "GitHub PAT."
                    }
                  }
                },
                "repoinfo": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "remote": {
                        "type": "string",
                        "description": "GitHub remote."
                      },
                      "repository": {
                        "type": "string",
                        "description": "GitHub repository."
                      },
                      "branch": {
                        "type": "string",
                        "description": "GitHub branch."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "commands": [
      {
        "command": "void.ctrl+l",
        "title": "Show Sidebar"
      },
      {
        "command": "void.ctrl+k",
        "title": "Show Selection Lens"
      },
      {
        "command": "void.approveDiff",
        "title": "Approve Diff"
      },
      {
        "command": "void.discardDiff",
        "title": "Discard Diff"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "voidViewContainer",
          "title": "My Extension",
          "icon": "$(hubot)"
        }
      ]
    },
    "views": {
      "voidViewContainer": [
        {
          "type": "webview",
          "id": "void.viewnumberone",
          "name": "Void"
        }
      ]
    },
    "keybindings": [
      {
        "command": "void.ctrl+l",
        "key": "ctrl+l",
        "mac": "cmd+l"
      },
      {
        "command": "void.ctrl+k",
        "key": "ctrl+k",
        "mac": "cmd+k"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "build": "rimraf dist && node build-tsx.js && node build-css.js",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@eslint/js": "^9.9.1",
    "@types/diff": "^5.2.2",
    "@types/jest": "^29.5.12",
    "@types/mocha": "^10.0.7",
    "@types/node": "^22.5.1",
    "@types/react": "^18.3.4",
    "@types/react-dom": "^18.3.0",
    "@types/vscode": "1.92.0",
    "@typescript-eslint/eslint-plugin": "^8.3.0",
    "@typescript-eslint/parser": "^8.3.0",
    "@vscode/test-cli": "0.0.10",
    "@vscode/test-electron": "2.4.1",
    "autoprefixer": "^10.4.20",
    "diff": "^6.0.0-beta",
    "esbuild": "^0.23.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.35.1",
    "eslint-plugin-react-hooks": "^4.6.2",
    "globals": "^15.9.0",
    "marked": "^14.1.0",
    "ollama": "^0.5.8",
    "postcss": "^8.4.41",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-markdown": "^9.0.1",
    "rimraf": "^6.0.1",
    "tailwindcss": "^3.4.10",
    "typescript": "5.5.4",
    "typescript-eslint": "^8.3.0"
  },
  "dependencies": {
    "@ai-sdk/anthropic": "^0.0.50",
    "@ai-sdk/azure": "^0.0.39",
    "@ai-sdk/openai": "^0.0.60",
    "@anthropic-ai/sdk": "^0.27.1",
    "ai": "^3.3.43",
    "ollama-ai-provider": "^0.15.0",
    "openai": "^4.57.0"
  }
}